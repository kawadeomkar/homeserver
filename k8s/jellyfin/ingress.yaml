apiVersion: v1
kind: Service
metadata:
  name: jellyfin-ingress-udp
  namespace: jellyfin
  annotations:
    metallb.universe.tf/allow-shared-ip: "homeserver-shared-ip"
spec:
  selector:
    # name: nginx-ingress-microk8s
    app: jellyfin
  type: LoadBalancer
  loadBalancerIP: 192.168.1.5
  sessionAffinity: ClientIP
  ports:
    - name: dlna-udp
      protocol: UDP
      port: 1900
      targetPort: 1900
    - name: discovery-udp
      protocol: UDP
      port: 7359
      targetPort: 7359
---
kind: Service
apiVersion: v1
metadata:
  name: jellyfin-ingress-tcp
  namespace: jellyfin
  annotations:
    metallb.universe.tf/allow-shared-ip: "homeserver-shared-ip"
spec:
  selector:
    # name: nginx-ingress-microk8s
    app: jellyfin
  type: LoadBalancer
  loadBalancerIP: 192.168.1.5
  sessionAffinity: ClientIP
  ports:
    - name: http-tcp
      protocol: TCP
      port: 8096
      targetPort: 8096
    - name: https-tcp
      port: 8920
      targetPort: 8920
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin-ingress
  namespace: jellyfin
  annotations:
    #kubernetes.io/ingress.class: "nginx" 
    nginx.ingress.kubernetes.io/rewrite-target: /
#    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS" 
#    cert-manager.io/cluster-issuer: "letsencrypt-prod" 
#    nginx.ingress.kubernetes.io/app-root:  
spec:
  rules:
    - host: jellyfin.homeserver.internal
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jellyfin
                port:
                  number: 8096
                  #  tls:
                  #  - hosts:
                  #    - jellyfin.mydomain.com
                  #    secretName: jellyfin.mydomain.com-tls # < cert-manager will store the created certificate in this secret.
